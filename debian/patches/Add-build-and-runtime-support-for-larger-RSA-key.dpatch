#! /bin/sh /usr/share/dpatch/dpatch-run
# From 534e2876acc05f9f8d9b54c18511fe768d77dfb5 Mon Sep 17 00:00:00 2001
# From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
# Date: Fri, 3 Oct 2014 12:01:11 -0400
# Subject: [PATCH] gpg: Add build and runtime support for larger RSA keys

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' gnupg-1.4.11~/config.h.in gnupg-1.4.11/config.h.in
--- gnupg-1.4.11~/config.h.in	2015-03-25 13:57:03.000000000 -0400
+++ gnupg-1.4.11/config.h.in	2015-03-25 13:57:09.117786438 -0400
@@ -664,6 +664,9 @@
 /* Define as the return type of signal handlers (`int' or `void'). */
 #undef RETSIGTYPE
 
+/* Size of secure memory buffer */
+#undef SECMEM_BUFFER_SIZE
+
 /* The size of `time_t', as computed by sizeof. */
 #undef SIZEOF_TIME_T
 
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' gnupg-1.4.11~/configure gnupg-1.4.11/configure
--- gnupg-1.4.11~/configure	2010-10-18 04:50:11.000000000 -0400
+++ gnupg-1.4.11/configure	2015-03-25 13:57:09.121786471 -0400
@@ -814,6 +814,7 @@
 enable_selinux_support
 enable_gnupg_iconv
 enable_minimal
+enable_large_secmem
 enable_card_support
 enable_agent_support
 enable_rsa
@@ -1507,6 +1508,7 @@
                           enable SELinux support
   --disable-gnupg-iconv   disable the new iconv code
   --enable-minimal        build the smallest gpg binary possible
+  --enable-large-secmem   allocate extra secure memory
   --disable-card-support  disable OpenPGP card support
   --disable-agent-support disable gpg-agent support
   --disable-rsa           disable the RSA public key algorithm
@@ -4740,6 +4742,7 @@
 card_support=yes
 agent_support=yes
 disable_keyserver_path=no
+large_secmem=no
 
 # Check whether --enable-minimal was given.
 if test "${enable_minimal+set}" = set; then :
@@ -4761,6 +4764,29 @@
 
 
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to allocate extra secure memory" >&5
+$as_echo_n "checking whether to allocate extra secure memory... " >&6; }
+# Check whether --enable-large-secmem was given.
+if test "${enable_large_secmem+set}" = set; then :
+  enableval=$enable_large_secmem; large_secmem=$enableval
+else
+  large_secmem=no
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $large_secmem" >&5
+$as_echo "$large_secmem" >&6; }
+if test "$large_secmem" = yes ; then
+   SECMEM_BUFFER_SIZE=65536
+else
+   SECMEM_BUFFER_SIZE=32768
+fi
+
+cat >>confdefs.h <<_ACEOF
+#define SECMEM_BUFFER_SIZE $SECMEM_BUFFER_SIZE
+_ACEOF
+
+
+
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether OpenPGP card support is requested" >&5
 $as_echo_n "checking whether OpenPGP card support is requested... " >&6; }
 # Check whether --enable-card-support was given.
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' gnupg-1.4.11~/configure.ac gnupg-1.4.11/configure.ac
--- gnupg-1.4.11~/configure.ac	2010-10-18 04:45:45.000000000 -0400
+++ gnupg-1.4.11/configure.ac	2015-03-25 13:57:09.105786337 -0400
@@ -147,6 +147,7 @@
 card_support=yes
 agent_support=yes
 disable_keyserver_path=no
+large_secmem=no
 
 AC_ARG_ENABLE(minimal,
    AC_HELP_STRING([--enable-minimal],[build the smallest gpg binary possible]),
@@ -166,6 +167,21 @@
    agent_support=no)
 
 
+AC_MSG_CHECKING([whether to allocate extra secure memory])
+AC_ARG_ENABLE(large-secmem,
+              AC_HELP_STRING([--enable-large-secmem],
+                             [allocate extra secure memory]),
+              large_secmem=$enableval, large_secmem=no)
+AC_MSG_RESULT($large_secmem)
+if test "$large_secmem" = yes ; then
+   SECMEM_BUFFER_SIZE=65536
+else
+   SECMEM_BUFFER_SIZE=32768
+fi
+AC_DEFINE_UNQUOTED(SECMEM_BUFFER_SIZE,$SECMEM_BUFFER_SIZE,
+                   [Size of secure memory buffer])
+
+
 AC_MSG_CHECKING([whether OpenPGP card support is requested])
 AC_ARG_ENABLE(card-support,
               AC_HELP_STRING([--disable-card-support],
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' gnupg-1.4.11~/doc/gpg.texi gnupg-1.4.11/doc/gpg.texi
--- gnupg-1.4.11~/doc/gpg.texi	2010-10-18 05:10:48.000000000 -0400
+++ gnupg-1.4.11/doc/gpg.texi	2015-03-25 13:57:09.109786371 -0400
@@ -1127,6 +1127,15 @@
 validation. This option is only meaningful if pka-lookups is set.
 @end table
 
+@item --enable-large-rsa
+@itemx --disable-large-rsa
+@opindex enable-large-rsa
+@opindex disable-large-rsa
+With --gen-key and --batch, enable the creation of larger RSA secret
+keys than is generally recommended (up to 8192 bits).  These large
+keys are more expensive to use, and their signatures and
+certifications are also larger.
+
 @item --enable-dsa2
 @itemx --disable-dsa2
 Enable hash truncation for all DSA keys even for old DSA Keys up to
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' gnupg-1.4.11~/g10/gpg.c gnupg-1.4.11/g10/gpg.c
--- gnupg-1.4.11~/g10/gpg.c	2010-07-05 05:17:37.000000000 -0400
+++ gnupg-1.4.11/g10/gpg.c	2015-03-25 13:57:09.109786371 -0400
@@ -368,6 +368,8 @@
     oAutoKeyLocate,
     oNoAutoKeyLocate,
     oAllowMultisigVerification,
+    oEnableLargeRSA,
+    oDisableLargeRSA,
     oEnableDSA2,
     oDisableDSA2,
     oAllowMultipleMessages,
@@ -715,6 +717,8 @@
     { oDebugCCIDDriver, "debug-ccid-driver", 0, "@"},
 #endif
     { oAllowMultisigVerification, "allow-multisig-verification", 0, "@"},
+    { oEnableLargeRSA, "enable-large-rsa", 0, "@"},
+    { oDisableLargeRSA, "disable-large-rsa", 0, "@"},
     { oEnableDSA2, "enable-dsa2", 0, "@"},
     { oDisableDSA2, "disable-dsa2", 0, "@"},
     { oAllowMultipleMessages, "allow-multiple-messages", 0, "@"},
@@ -2008,7 +2012,7 @@
     }
 #endif
     /* initialize the secure memory. */
-    got_secmem=secmem_init( 32768 );
+    got_secmem=secmem_init( SECMEM_BUFFER_SIZE );
     maybe_setuid = 0;
     /* Okay, we are now working under our real uid */
 
@@ -2876,6 +2880,22 @@
 	    release_akl();
 	    break;
 
+	  case oEnableLargeRSA:
+#if SECMEM_BUFFER_SIZE >= 65536
+            opt.flags.large_rsa=1;
+#else
+            if (configname)
+              log_info("%s:%d: WARNING: gpg not built with large secure "
+                         "memory buffer.  Ignoring enable-large-rsa\n",
+                        configname,configlineno);
+            else
+              log_info("WARNING: gpg not built with large secure "
+                         "memory buffer.  Ignoring --enable-large-rsa\n");
+#endif /* SECMEM_BUFFER_SIZE >= 65536 */
+            break;
+	  case oDisableLargeRSA: opt.flags.large_rsa=0;
+            break;
+
 	  case oEnableDSA2: opt.flags.dsa2=1; break;
 	  case oDisableDSA2: opt.flags.dsa2=0; break;
 
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' gnupg-1.4.11~/g10/options.h gnupg-1.4.11/g10/options.h
--- gnupg-1.4.11~/g10/options.h	2009-07-20 04:01:58.000000000 -0400
+++ gnupg-1.4.11/g10/options.h	2015-03-25 13:57:09.113786404 -0400
@@ -227,6 +227,7 @@
     unsigned int utf8_filename:1;
     unsigned int dsa2:1;
     unsigned int allow_multiple_messages:1;
+    unsigned int large_rsa:1;
   } flags;
 
   /* Linked list of ways to find a key if the key isn't on the local
